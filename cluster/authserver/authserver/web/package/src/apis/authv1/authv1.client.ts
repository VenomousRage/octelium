// @generated by protobuf-ts 2.10.0 with parameter long_type_number
// @generated from protobuf file "apis/protobuf/main/authv1/authv1.proto" (package "octelium.api.main.auth.v1", syntax proto3)
// tslint:disable
//
// Copyright Octelium Labs, LLC. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MainService } from "./authv1";
import type { AuthenticateWithPasskeyRequest } from "./authv1";
import type { AuthenticateWithPasskeyBeginResponse } from "./authv1";
import type { AuthenticateWithPasskeyBeginRequest } from "./authv1";
import type { GetAvailableAuthenticatorResponse } from "./authv1";
import type { GetAvailableAuthenticatorRequest } from "./authv1";
import type { AuthenticateAuthenticatorBeginResponse } from "./authv1";
import type { AuthenticateAuthenticatorBeginRequest } from "./authv1";
import type { RegisterAuthenticatorFinishResponse } from "./authv1";
import type { RegisterAuthenticatorFinishRequest } from "./authv1";
import type { RegisterAuthenticatorBeginResponse } from "./authv1";
import type { RegisterAuthenticatorBeginRequest } from "./authv1";
import type { OperationResult } from "../metav1/metav1";
import type { DeleteOptions } from "../metav1/metav1";
import type { AuthenticatorList } from "./authv1";
import type { ListAuthenticatorOptions } from "./authv1";
import type { CreateAuthenticatorRequest } from "./authv1";
import type { Authenticator } from "./authv1";
import type { GetOptions } from "../metav1/metav1";
import type { RegisterDeviceFinishResponse } from "./authv1";
import type { RegisterDeviceFinishRequest } from "./authv1";
import type { RegisterDeviceBeginResponse } from "./authv1";
import type { RegisterDeviceBeginRequest } from "./authv1";
import type { LogoutResponse } from "./authv1";
import type { LogoutRequest } from "./authv1";
import type { AuthenticateWithAuthenticatorRequest } from "./authv1";
import type { AuthenticateWithRefreshTokenRequest } from "./authv1";
import type { AuthenticateWithAssertionRequest } from "./authv1";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SessionToken } from "./authv1";
import type { AuthenticateWithAuthenticationTokenRequest } from "./authv1";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service octelium.api.main.auth.v1.MainService
 */
export interface IMainServiceClient {
    /**
     * @generated from protobuf rpc: AuthenticateWithAuthenticationToken(octelium.api.main.auth.v1.AuthenticateWithAuthenticationTokenRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAuthenticationToken(input: AuthenticateWithAuthenticationTokenRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAuthenticationTokenRequest, SessionToken>;
    /**
     * @generated from protobuf rpc: AuthenticateWithAssertion(octelium.api.main.auth.v1.AuthenticateWithAssertionRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAssertion(input: AuthenticateWithAssertionRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAssertionRequest, SessionToken>;
    /**
     * @generated from protobuf rpc: AuthenticateWithRefreshToken(octelium.api.main.auth.v1.AuthenticateWithRefreshTokenRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithRefreshToken(input: AuthenticateWithRefreshTokenRequest, options?: RpcOptions): UnaryCall<AuthenticateWithRefreshTokenRequest, SessionToken>;
    /**
     * @generated from protobuf rpc: AuthenticateWithAuthenticator(octelium.api.main.auth.v1.AuthenticateWithAuthenticatorRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAuthenticator(input: AuthenticateWithAuthenticatorRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAuthenticatorRequest, SessionToken>;
    /**
     * @generated from protobuf rpc: Logout(octelium.api.main.auth.v1.LogoutRequest) returns (octelium.api.main.auth.v1.LogoutResponse);
     */
    logout(input: LogoutRequest, options?: RpcOptions): UnaryCall<LogoutRequest, LogoutResponse>;
    /**
     * @generated from protobuf rpc: RegisterDeviceBegin(octelium.api.main.auth.v1.RegisterDeviceBeginRequest) returns (octelium.api.main.auth.v1.RegisterDeviceBeginResponse);
     */
    registerDeviceBegin(input: RegisterDeviceBeginRequest, options?: RpcOptions): UnaryCall<RegisterDeviceBeginRequest, RegisterDeviceBeginResponse>;
    /**
     * @generated from protobuf rpc: RegisterDeviceFinish(octelium.api.main.auth.v1.RegisterDeviceFinishRequest) returns (octelium.api.main.auth.v1.RegisterDeviceFinishResponse);
     */
    registerDeviceFinish(input: RegisterDeviceFinishRequest, options?: RpcOptions): UnaryCall<RegisterDeviceFinishRequest, RegisterDeviceFinishResponse>;
    /**
     * @generated from protobuf rpc: GetAuthenticator(octelium.api.main.meta.v1.GetOptions) returns (octelium.api.main.auth.v1.Authenticator);
     */
    getAuthenticator(input: GetOptions, options?: RpcOptions): UnaryCall<GetOptions, Authenticator>;
    /**
     * @generated from protobuf rpc: CreateAuthenticator(octelium.api.main.auth.v1.CreateAuthenticatorRequest) returns (octelium.api.main.auth.v1.Authenticator);
     */
    createAuthenticator(input: CreateAuthenticatorRequest, options?: RpcOptions): UnaryCall<CreateAuthenticatorRequest, Authenticator>;
    /**
     * @generated from protobuf rpc: UpdateAuthenticator(octelium.api.main.auth.v1.Authenticator) returns (octelium.api.main.auth.v1.Authenticator);
     */
    updateAuthenticator(input: Authenticator, options?: RpcOptions): UnaryCall<Authenticator, Authenticator>;
    /**
     * @generated from protobuf rpc: ListAuthenticator(octelium.api.main.auth.v1.ListAuthenticatorOptions) returns (octelium.api.main.auth.v1.AuthenticatorList);
     */
    listAuthenticator(input: ListAuthenticatorOptions, options?: RpcOptions): UnaryCall<ListAuthenticatorOptions, AuthenticatorList>;
    /**
     * @generated from protobuf rpc: DeleteAuthenticator(octelium.api.main.meta.v1.DeleteOptions) returns (octelium.api.main.meta.v1.OperationResult);
     */
    deleteAuthenticator(input: DeleteOptions, options?: RpcOptions): UnaryCall<DeleteOptions, OperationResult>;
    /**
     * @generated from protobuf rpc: RegisterAuthenticatorBegin(octelium.api.main.auth.v1.RegisterAuthenticatorBeginRequest) returns (octelium.api.main.auth.v1.RegisterAuthenticatorBeginResponse);
     */
    registerAuthenticatorBegin(input: RegisterAuthenticatorBeginRequest, options?: RpcOptions): UnaryCall<RegisterAuthenticatorBeginRequest, RegisterAuthenticatorBeginResponse>;
    /**
     * @generated from protobuf rpc: RegisterAuthenticatorFinish(octelium.api.main.auth.v1.RegisterAuthenticatorFinishRequest) returns (octelium.api.main.auth.v1.RegisterAuthenticatorFinishResponse);
     */
    registerAuthenticatorFinish(input: RegisterAuthenticatorFinishRequest, options?: RpcOptions): UnaryCall<RegisterAuthenticatorFinishRequest, RegisterAuthenticatorFinishResponse>;
    /**
     * @generated from protobuf rpc: AuthenticateAuthenticatorBegin(octelium.api.main.auth.v1.AuthenticateAuthenticatorBeginRequest) returns (octelium.api.main.auth.v1.AuthenticateAuthenticatorBeginResponse);
     */
    authenticateAuthenticatorBegin(input: AuthenticateAuthenticatorBeginRequest, options?: RpcOptions): UnaryCall<AuthenticateAuthenticatorBeginRequest, AuthenticateAuthenticatorBeginResponse>;
    /**
     * @generated from protobuf rpc: GetAvailableAuthenticator(octelium.api.main.auth.v1.GetAvailableAuthenticatorRequest) returns (octelium.api.main.auth.v1.GetAvailableAuthenticatorResponse);
     */
    getAvailableAuthenticator(input: GetAvailableAuthenticatorRequest, options?: RpcOptions): UnaryCall<GetAvailableAuthenticatorRequest, GetAvailableAuthenticatorResponse>;
    /**
     * @generated from protobuf rpc: AuthenticateWithPasskeyBegin(octelium.api.main.auth.v1.AuthenticateWithPasskeyBeginRequest) returns (octelium.api.main.auth.v1.AuthenticateWithPasskeyBeginResponse);
     */
    authenticateWithPasskeyBegin(input: AuthenticateWithPasskeyBeginRequest, options?: RpcOptions): UnaryCall<AuthenticateWithPasskeyBeginRequest, AuthenticateWithPasskeyBeginResponse>;
    /**
     * @generated from protobuf rpc: AuthenticateWithPasskey(octelium.api.main.auth.v1.AuthenticateWithPasskeyRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithPasskey(input: AuthenticateWithPasskeyRequest, options?: RpcOptions): UnaryCall<AuthenticateWithPasskeyRequest, SessionToken>;
}
/**
 * @generated from protobuf service octelium.api.main.auth.v1.MainService
 */
export class MainServiceClient implements IMainServiceClient, ServiceInfo {
    typeName = MainService.typeName;
    methods = MainService.methods;
    options = MainService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithAuthenticationToken(octelium.api.main.auth.v1.AuthenticateWithAuthenticationTokenRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAuthenticationToken(input: AuthenticateWithAuthenticationTokenRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAuthenticationTokenRequest, SessionToken> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithAuthenticationTokenRequest, SessionToken>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithAssertion(octelium.api.main.auth.v1.AuthenticateWithAssertionRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAssertion(input: AuthenticateWithAssertionRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAssertionRequest, SessionToken> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithAssertionRequest, SessionToken>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithRefreshToken(octelium.api.main.auth.v1.AuthenticateWithRefreshTokenRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithRefreshToken(input: AuthenticateWithRefreshTokenRequest, options?: RpcOptions): UnaryCall<AuthenticateWithRefreshTokenRequest, SessionToken> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithRefreshTokenRequest, SessionToken>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithAuthenticator(octelium.api.main.auth.v1.AuthenticateWithAuthenticatorRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithAuthenticator(input: AuthenticateWithAuthenticatorRequest, options?: RpcOptions): UnaryCall<AuthenticateWithAuthenticatorRequest, SessionToken> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithAuthenticatorRequest, SessionToken>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Logout(octelium.api.main.auth.v1.LogoutRequest) returns (octelium.api.main.auth.v1.LogoutResponse);
     */
    logout(input: LogoutRequest, options?: RpcOptions): UnaryCall<LogoutRequest, LogoutResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LogoutRequest, LogoutResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterDeviceBegin(octelium.api.main.auth.v1.RegisterDeviceBeginRequest) returns (octelium.api.main.auth.v1.RegisterDeviceBeginResponse);
     */
    registerDeviceBegin(input: RegisterDeviceBeginRequest, options?: RpcOptions): UnaryCall<RegisterDeviceBeginRequest, RegisterDeviceBeginResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterDeviceBeginRequest, RegisterDeviceBeginResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterDeviceFinish(octelium.api.main.auth.v1.RegisterDeviceFinishRequest) returns (octelium.api.main.auth.v1.RegisterDeviceFinishResponse);
     */
    registerDeviceFinish(input: RegisterDeviceFinishRequest, options?: RpcOptions): UnaryCall<RegisterDeviceFinishRequest, RegisterDeviceFinishResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterDeviceFinishRequest, RegisterDeviceFinishResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAuthenticator(octelium.api.main.meta.v1.GetOptions) returns (octelium.api.main.auth.v1.Authenticator);
     */
    getAuthenticator(input: GetOptions, options?: RpcOptions): UnaryCall<GetOptions, Authenticator> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetOptions, Authenticator>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateAuthenticator(octelium.api.main.auth.v1.CreateAuthenticatorRequest) returns (octelium.api.main.auth.v1.Authenticator);
     */
    createAuthenticator(input: CreateAuthenticatorRequest, options?: RpcOptions): UnaryCall<CreateAuthenticatorRequest, Authenticator> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateAuthenticatorRequest, Authenticator>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateAuthenticator(octelium.api.main.auth.v1.Authenticator) returns (octelium.api.main.auth.v1.Authenticator);
     */
    updateAuthenticator(input: Authenticator, options?: RpcOptions): UnaryCall<Authenticator, Authenticator> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<Authenticator, Authenticator>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListAuthenticator(octelium.api.main.auth.v1.ListAuthenticatorOptions) returns (octelium.api.main.auth.v1.AuthenticatorList);
     */
    listAuthenticator(input: ListAuthenticatorOptions, options?: RpcOptions): UnaryCall<ListAuthenticatorOptions, AuthenticatorList> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListAuthenticatorOptions, AuthenticatorList>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteAuthenticator(octelium.api.main.meta.v1.DeleteOptions) returns (octelium.api.main.meta.v1.OperationResult);
     */
    deleteAuthenticator(input: DeleteOptions, options?: RpcOptions): UnaryCall<DeleteOptions, OperationResult> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteOptions, OperationResult>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterAuthenticatorBegin(octelium.api.main.auth.v1.RegisterAuthenticatorBeginRequest) returns (octelium.api.main.auth.v1.RegisterAuthenticatorBeginResponse);
     */
    registerAuthenticatorBegin(input: RegisterAuthenticatorBeginRequest, options?: RpcOptions): UnaryCall<RegisterAuthenticatorBeginRequest, RegisterAuthenticatorBeginResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterAuthenticatorBeginRequest, RegisterAuthenticatorBeginResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterAuthenticatorFinish(octelium.api.main.auth.v1.RegisterAuthenticatorFinishRequest) returns (octelium.api.main.auth.v1.RegisterAuthenticatorFinishResponse);
     */
    registerAuthenticatorFinish(input: RegisterAuthenticatorFinishRequest, options?: RpcOptions): UnaryCall<RegisterAuthenticatorFinishRequest, RegisterAuthenticatorFinishResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterAuthenticatorFinishRequest, RegisterAuthenticatorFinishResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateAuthenticatorBegin(octelium.api.main.auth.v1.AuthenticateAuthenticatorBeginRequest) returns (octelium.api.main.auth.v1.AuthenticateAuthenticatorBeginResponse);
     */
    authenticateAuthenticatorBegin(input: AuthenticateAuthenticatorBeginRequest, options?: RpcOptions): UnaryCall<AuthenticateAuthenticatorBeginRequest, AuthenticateAuthenticatorBeginResponse> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateAuthenticatorBeginRequest, AuthenticateAuthenticatorBeginResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAvailableAuthenticator(octelium.api.main.auth.v1.GetAvailableAuthenticatorRequest) returns (octelium.api.main.auth.v1.GetAvailableAuthenticatorResponse);
     */
    getAvailableAuthenticator(input: GetAvailableAuthenticatorRequest, options?: RpcOptions): UnaryCall<GetAvailableAuthenticatorRequest, GetAvailableAuthenticatorResponse> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAvailableAuthenticatorRequest, GetAvailableAuthenticatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithPasskeyBegin(octelium.api.main.auth.v1.AuthenticateWithPasskeyBeginRequest) returns (octelium.api.main.auth.v1.AuthenticateWithPasskeyBeginResponse);
     */
    authenticateWithPasskeyBegin(input: AuthenticateWithPasskeyBeginRequest, options?: RpcOptions): UnaryCall<AuthenticateWithPasskeyBeginRequest, AuthenticateWithPasskeyBeginResponse> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithPasskeyBeginRequest, AuthenticateWithPasskeyBeginResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AuthenticateWithPasskey(octelium.api.main.auth.v1.AuthenticateWithPasskeyRequest) returns (octelium.api.main.auth.v1.SessionToken);
     */
    authenticateWithPasskey(input: AuthenticateWithPasskeyRequest, options?: RpcOptions): UnaryCall<AuthenticateWithPasskeyRequest, SessionToken> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticateWithPasskeyRequest, SessionToken>("unary", this._transport, method, opt, input);
    }
}
